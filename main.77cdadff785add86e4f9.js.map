{"version":3,"sources":["webpack:///./components/random-number.js","webpack:///./components/color.js","webpack:///./components/plugins.js","webpack:///./components/shapes-props.js","webpack:///./index.js"],"names":["randomNumberFromRange","start","end","range","random","Math","round","getRandomColor","color","i","floor","ShapesDisplay","element","initialValue","step","this","value","refs","display","querySelector","updateDisplay","textContent","DisplayValue","decBtn","incBtn","bindEvents","increment","decrement","addEventListener","bind","gravity","clickedShapesDisplay","document","canvas","createElement","id","app","PIXI","width","height","antialias","transparent","resolution","view","createRectangleButton","rectangleButton","callback","x","y","rotation","scale","rectangle","beginFill","drawRect","endFill","yVelocity","interactive","buttonMode","set","on","event","parent","removeChild","ticker","add","getRectangleShapeButton","stage","addChild","createCircleButton","circleButton","circle","drawCircle","getCircleShapeButton","createEllipseButton","ellipseButton","ellipse","drawEllipse","getEllipseShapeButton","createTriangleButton","triangleButton","triangle","drawPolygon","getTriangleShapeButton","createPentagonButton","pentagonButton","pentagon","getPentagonShapeButton","createHexagonButton","hexagonButton","hexagon","getHexagonShapeButton","createStarButton","starButton","star","getStarShapeButton","replaceWith","setInterval","functionID","canvasTotalScreenPixels"],"mappings":"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","file":"main.77cdadff785add86e4f9.js","sourcesContent":["'use strict';\r\n\r\nexport function randomNumberFromRange(start, end) {\r\n  const range = end - start;\r\n  const random = Math.random() * range;\r\n  const roundedRandomNumber = Math.round(random);\r\n  return start + roundedRandomNumber;\r\n}\r\n","'use strict';\r\n\r\n//Generate random color\r\n\r\nexport function getRandomColor() {\r\n  let letters = '0123456789ABCDEF';\r\n  let color = '0x';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n","'use strict';\r\n//-----------Display plugins ----------------------\r\n\r\nimport { gravity } from './shapes-props';\r\nexport { ShapesDisplay, DisplayValue };\r\n\r\nclass ShapesDisplay {\r\n  constructor({ element, initialValue = 0, step = 1 }) {\r\n    this.value = initialValue;\r\n    this.step = step;\r\n    this.refs = {\r\n      display: element.querySelector('div.value'),\r\n    };\r\n    this.updateDisplay();\r\n  }\r\n  //   increment() {\r\n  //     this.value += this.step;\r\n  //     this.updateDisplay();\r\n  //   }\r\n  //   decrement() {\r\n  //     this.value += this.step;\r\n  //     this.updateDisplay();\r\n  //   }\r\n\r\n  updateDisplay() {\r\n    this.refs.display.textContent = this.value;\r\n  }\r\n}\r\n\r\n// const clickedShapesDisplay = new ShapesDisplay({\r\n//   element: document.querySelector('#display-2'),\r\n//   initialValue: 0,\r\n//   step: 1,\r\n// });\r\n\r\n// console.log(clickedShapesDisplay.value);\r\n\r\n//\r\n\r\nclass DisplayValue {\r\n  constructor({ element, initialValue = 0, step = 1 }) {\r\n    this.value = initialValue;\r\n    this.step = step;\r\n    this.refs = {\r\n      decBtn: element.querySelector('button[data-action=\"decrement\"]'),\r\n      incBtn: element.querySelector('button[data-action=\"increment\"]'),\r\n      display: element.querySelector('div.value'),\r\n    };\r\n    this.updateDisplay();\r\n    this.bindEvents();\r\n  }\r\n  increment() {\r\n    this.value += this.step;\r\n    this.updateDisplay();\r\n  }\r\n  decrement() {\r\n    this.value -= this.step;\r\n    this.updateDisplay();\r\n  }\r\n  updateDisplay() {\r\n    this.refs.display.textContent = this.value;\r\n  }\r\n\r\n  bindEvents() {\r\n    this.refs.decBtn.addEventListener('click', this.decrement.bind(this));\r\n    this.refs.incBtn.addEventListener('click', this.increment.bind(this));\r\n  }\r\n}\r\n\r\n// const shapesNumberDisplay = new DisplayValue({\r\n//   element: document.querySelector('#display-1'),\r\n//   initialValue: 1,\r\n//   step: 1,\r\n// });\r\n\r\n// const gravityDisplay = new DisplayValue({\r\n//   element: document.querySelector('#display-2'),\r\n//   initialValue: 4000,\r\n//   step: 1000,\r\n// });\r\n\r\n// console.log(gravityDisplay.value);\r\n","'use strict';\r\nimport * as PIXI from 'pixi.js';\r\nimport _, { divide } from 'lodash';\r\nimport { randomNumberFromRange } from './random-number';\r\nimport { getRandomColor } from './color';\r\nimport { app } from '../index';\r\nexport {\r\n  getRectangleShapeButton,\r\n  getCircleShapeButton,\r\n  getEllipseShapeButton,\r\n  getPentagonShapeButton,\r\n  getHexagonShapeButton,\r\n  getStarShapeButton,\r\n  getTriangleShapeButton,\r\n  gravity,\r\n};\r\n\r\nimport { ShapesDisplay, DisplayValue } from './plugins';\r\nimport { canvasTotalScreenPixels } from '../index';\r\n//------------ Velocity or Gravity -------------------\r\nlet gravity = 1;\r\n//---------------------- Shapes buttons ------------------\r\n\r\n//Rectangle - 4 sides\r\nconst getRectangleShapeButton = (\r\n  callback,\r\n  x = 0,\r\n  y = 0,\r\n  rotation = 0,\r\n  scale = 1,\r\n) => {\r\n  let rectangle = new PIXI.Graphics();\r\n\r\n  rectangle.beginFill(getRandomColor());\r\n  rectangle.drawRect(0, 0, 64, 64);\r\n  rectangle.endFill();\r\n  rectangle.x = x;\r\n  rectangle.y = y;\r\n  rectangle.yVelocity = gravity;\r\n  rectangle.rotation = rotation;\r\n  rectangle.interactive = true;\r\n  rectangle.buttonMode = true;\r\n  rectangle.scale.set(scale);\r\n  rectangle.on('pointerdown', event => {\r\n    rectangle.parent.removeChild(rectangle);\r\n    clickedShapesDisplay.value -= 1;\r\n    clickedShapesDisplay.updateDisplay();\r\n  });\r\n  app.ticker.add(() => {\r\n    rectangle.y += rectangle.yVelocity;\r\n\r\n    if (rectangle.y === 600) {\r\n      clickedShapesDisplay.value -= 1;\r\n      clickedShapesDisplay.updateDisplay();\r\n    }\r\n  });\r\n\r\n  return rectangle;\r\n};\r\n\r\n// // Circle\r\nconst getCircleShapeButton = (\r\n  callback,\r\n  x = 0,\r\n  y = 0,\r\n  rotation = 0,\r\n  scale = 1,\r\n) => {\r\n  let circle = new PIXI.Graphics();\r\n\r\n  circle.beginFill(getRandomColor());\r\n  circle.drawCircle(0, 0, 32);\r\n  circle.endFill();\r\n  circle.x = x;\r\n  circle.y = y;\r\n  circle.yVelocity = gravity;\r\n\r\n  circle.rotation = rotation;\r\n  circle.interactive = true;\r\n  circle.buttonMode = true;\r\n  circle.scale.set(scale);\r\n  circle.on('pointerdown', event => {\r\n    circle.parent.removeChild(circle);\r\n    clickedShapesDisplay.value -= 1;\r\n    clickedShapesDisplay.updateDisplay();\r\n  });\r\n  app.ticker.add(() => {\r\n    circle.y += circle.yVelocity;\r\n    if (circle.y === 600) {\r\n      clickedShapesDisplay.value -= 1;\r\n      clickedShapesDisplay.updateDisplay();\r\n    }\r\n  });\r\n\r\n  return circle;\r\n};\r\n\r\n// Ellipse\r\nconst getEllipseShapeButton = (\r\n  callback,\r\n  x = 0,\r\n  y = 0,\r\n  rotation = 0,\r\n  scale = 1,\r\n) => {\r\n  let ellipse = new PIXI.Graphics();\r\n\r\n  ellipse.beginFill(getRandomColor());\r\n  ellipse.drawEllipse(0, 0, 50, 20);\r\n  ellipse.endFill();\r\n  ellipse.x = x;\r\n  ellipse.y = y;\r\n  ellipse.yVelocity = gravity;\r\n  ellipse.rotation = rotation;\r\n  ellipse.interactive = true;\r\n  ellipse.buttonMode = true;\r\n  ellipse.scale.set(scale);\r\n  ellipse.on('pointerdown', event => {\r\n    ellipse.parent.removeChild(ellipse);\r\n    clickedShapesDisplay.value -= 1;\r\n    clickedShapesDisplay.updateDisplay();\r\n  });\r\n  app.ticker.add(() => {\r\n    ellipse.y += ellipse.yVelocity;\r\n    if (ellipse.y === 600) {\r\n      clickedShapesDisplay.value -= 1;\r\n      clickedShapesDisplay.updateDisplay();\r\n    }\r\n  });\r\n\r\n  return ellipse;\r\n};\r\n\r\n// Triangle\r\nconst getTriangleShapeButton = (\r\n  callback,\r\n  x = 0,\r\n  y = 0,\r\n  rotation = 0,\r\n  scale = 1,\r\n) => {\r\n  let pathTriangle = [-32, 64, 32, 64, 0, 0];\r\n\r\n  let triangle = new PIXI.Graphics();\r\n  triangle.beginFill(getRandomColor());\r\n\r\n  triangle.drawPolygon(pathTriangle);\r\n\r\n  triangle.endFill();\r\n  triangle.x = x;\r\n  triangle.y = y;\r\n  triangle.yVelocity = gravity;\r\n  triangle.rotation = rotation;\r\n  triangle.interactive = true;\r\n  triangle.buttonMode = true;\r\n  triangle.scale.set(scale);\r\n  triangle.on('pointerdown', event => {\r\n    triangle.parent.removeChild(triangle);\r\n    clickedShapesDisplay.value -= 1;\r\n    clickedShapesDisplay.updateDisplay();\r\n  });\r\n  app.ticker.add(() => {\r\n    triangle.y += triangle.yVelocity;\r\n    if (triangle.y === 600) {\r\n      clickedShapesDisplay.value -= 1;\r\n      clickedShapesDisplay.updateDisplay();\r\n    }\r\n  });\r\n\r\n  return triangle;\r\n};\r\n\r\n// Pentagon - 5 sides\r\nconst getPentagonShapeButton = (\r\n  callback,\r\n  x = 0,\r\n  y = 0,\r\n  rotation = 0,\r\n  scale = 2.5,\r\n) => {\r\n  let pathPentagon = [10, -40, 30, -50, 50, -40, 40, -30, 20, -30];\r\n\r\n  let pentagon = new PIXI.Graphics();\r\n  pentagon.beginFill(getRandomColor());\r\n\r\n  pentagon.drawPolygon(pathPentagon);\r\n\r\n  pentagon.endFill();\r\n  pentagon.x = x;\r\n  pentagon.y = y;\r\n  pentagon.yVelocity = gravity;\r\n  pentagon.rotation = rotation;\r\n  pentagon.interactive = true;\r\n  pentagon.buttonMode = true;\r\n  pentagon.scale.set(scale);\r\n  pentagon.on('pointerdown', event => {\r\n    pentagon.parent.removeChild(pentagon);\r\n    clickedShapesDisplay.value -= 1;\r\n    clickedShapesDisplay.updateDisplay();\r\n  });\r\n  app.ticker.add(() => {\r\n    pentagon.y += pentagon.yVelocity;\r\n    if (pentagon.y === 600) {\r\n      clickedShapesDisplay.value -= 1;\r\n      clickedShapesDisplay.updateDisplay();\r\n    }\r\n  });\r\n\r\n  return pentagon;\r\n};\r\n\r\n// Hexagon - 6 sides\r\nconst getHexagonShapeButton = (\r\n  callback,\r\n  x = 0,\r\n  y = 0,\r\n  rotation = 0,\r\n  scale = 2.5,\r\n) => {\r\n  let pathHexagon = [10, -40, 20, -50, 40, -50, 50, -40, 40, -30, 20, -30];\r\n\r\n  let hexagon = new PIXI.Graphics();\r\n  hexagon.beginFill(getRandomColor());\r\n\r\n  hexagon.drawPolygon(pathHexagon);\r\n\r\n  hexagon.endFill();\r\n  hexagon.x = x;\r\n  hexagon.y = y;\r\n  hexagon.yVelocity = gravity;\r\n  hexagon.rotation = rotation;\r\n  hexagon.interactive = true;\r\n  hexagon.buttonMode = true;\r\n  hexagon.scale.set(scale);\r\n  hexagon.on('pointerdown', event => {\r\n    hexagon.parent.removeChild(hexagon);\r\n    clickedShapesDisplay.value -= 1;\r\n    clickedShapesDisplay.updateDisplay();\r\n  });\r\n  app.ticker.add(() => {\r\n    hexagon.y += hexagon.yVelocity;\r\n    if (hexagon.y === 600) {\r\n      clickedShapesDisplay.value -= 1;\r\n      clickedShapesDisplay.updateDisplay();\r\n    }\r\n  });\r\n\r\n  return hexagon;\r\n};\r\n\r\n// Random shape - star\r\nconst getStarShapeButton = (\r\n  callback,\r\n  x = 0,\r\n  y = 0,\r\n  rotation = 0,\r\n  scale = 0.5,\r\n) => {\r\n  let starPath = [\r\n    550,\r\n    100,\r\n    570,\r\n    150,\r\n    630,\r\n    155,\r\n    585,\r\n    195,\r\n    600,\r\n    250,\r\n    550,\r\n    220,\r\n    500,\r\n    250,\r\n    515,\r\n    195,\r\n    470,\r\n    155,\r\n    530,\r\n    150,\r\n  ];\r\n\r\n  let star = new PIXI.Graphics();\r\n  star.beginFill(getRandomColor());\r\n\r\n  star.drawPolygon(starPath);\r\n\r\n  star.endFill();\r\n\r\n  star.x = x;\r\n  star.y = y;\r\n  star.yVelocity = gravity;\r\n  star.rotation = rotation;\r\n  star.interactive = true;\r\n  star.buttonMode = true;\r\n  star.scale.set(scale);\r\n  star.on('pointerdown', event => {\r\n    star.parent.removeChild(star);\r\n    clickedShapesDisplay.value -= 1;\r\n    clickedShapesDisplay.updateDisplay();\r\n  });\r\n  app.ticker.add(() => {\r\n    star.y += star.yVelocity;\r\n    if (star.y === 600) {\r\n      clickedShapesDisplay.value -= 1;\r\n      clickedShapesDisplay.updateDisplay();\r\n    }\r\n  });\r\n\r\n  return star;\r\n};\r\n\r\n//-------------------- Display values -----------------------\r\n\r\nexport const clickedShapesDisplay = new ShapesDisplay({\r\n  element: document.querySelector('#display-2'),\r\n  initialValue: 0,\r\n  step: 1,\r\n});\r\n\r\nconst occupiedSerfaceInPixels = new ShapesDisplay({\r\n  element: document.querySelector('#display-1'),\r\n  initialValue: 540000,\r\n  // initialValue:canvasTotalScreenPixels\r\n  step: 1,\r\n});\r\n\r\nconst shapesPerSec = new DisplayValue({\r\n  element: document.querySelector('#display-3'),\r\n  initialValue: 1,\r\n  step: 1,\r\n});\r\n\r\nclass DisplayGravity {\r\n  constructor({ element, initialValue = 0, step = 1 }) {\r\n    this.value = initialValue;\r\n    this.step = step;\r\n    this.refs = {\r\n      decBtn: element.querySelector('button[data-action=\"decrement\"]'),\r\n      incBtn: element.querySelector('button[data-action=\"increment\"]'),\r\n      display: element.querySelector('div.value'),\r\n    };\r\n    this.updateDisplay();\r\n    this.bindEvents();\r\n  }\r\n  increment() {\r\n    this.value += this.step;\r\n    this.updateDisplay();\r\n  }\r\n  decrement() {\r\n    this.value -= this.step;\r\n    this.updateDisplay();\r\n  }\r\n  updateDisplay() {\r\n    this.refs.display.textContent = this.value;\r\n    gravity = this.value;\r\n  }\r\n\r\n  bindEvents() {\r\n    this.refs.decBtn.addEventListener('click', this.decrement.bind(this));\r\n    this.refs.incBtn.addEventListener('click', this.increment.bind(this));\r\n  }\r\n}\r\nconst gravityValue = new DisplayGravity({\r\n  element: document.querySelector('#display-4'),\r\n  initialValue: 1,\r\n  step: 1,\r\n});\r\n","'use strict';\r\nimport './styles.css';\r\n\r\nimport * as PIXI from 'pixi.js';\r\nimport _, { divide } from 'lodash';\r\nimport { randomNumberFromRange } from './components/random-number';\r\nimport { getRandomColor } from './components/color';\r\nimport {\r\n  getRectangleShapeButton,\r\n  getCircleShapeButton,\r\n  getEllipseShapeButton,\r\n  getPentagonShapeButton,\r\n  getHexagonShapeButton,\r\n  getStarShapeButton,\r\n  getTriangleShapeButton,\r\n} from './components/shapes-props';\r\nimport { clickedShapesDisplay } from './components/shapes-props';\r\n// import { canvasTotalScreenPixels } from './components/occupied-surface';\r\nexport { app, canvas, canvasTotalScreenPixels };\r\n\r\n//---------Create canvas--------------------------\r\nconst canvas = document.createElement('canvas');\r\ncanvas.id = 'NotPixiCanvas';\r\nconst app = new PIXI.Application({\r\n  width: 900, // default: 800\r\n  height: 600, // default: 600\r\n  antialias: true, // default: false\r\n  transparent: true, // default: false\r\n  resolution: 1, // default: 1\r\n  view: canvas,\r\n});\r\n\r\nconst getTestEl = document.querySelector('.test');\r\ngetTestEl.replaceWith(app.view);\r\n\r\n//-------------- Shapes -----------------------------\r\n\r\nfunction createRectangleButton() {\r\n  let rectangleButton = getRectangleShapeButton(\r\n    null,\r\n    randomNumberFromRange(20, 850),\r\n    -50,\r\n  );\r\n  app.stage.addChild(rectangleButton);\r\n}\r\n\r\nfunction createCircleButton() {\r\n  let circleButton = getCircleShapeButton(\r\n    null,\r\n    randomNumberFromRange(20, 850),\r\n    -40,\r\n  );\r\n  app.stage.addChild(circleButton);\r\n}\r\n\r\nfunction createEllipseButton() {\r\n  let ellipseButton = getEllipseShapeButton(\r\n    null,\r\n    randomNumberFromRange(20, 850),\r\n    0,\r\n  );\r\n  app.stage.addChild(ellipseButton);\r\n}\r\n\r\nfunction createTriangleButton() {\r\n  let triangleButton = getTriangleShapeButton(\r\n    null,\r\n    randomNumberFromRange(20, 850),\r\n    -50,\r\n  );\r\n  app.stage.addChild(triangleButton);\r\n}\r\n\r\nfunction createPentagonButton() {\r\n  let pentagonButton = getPentagonShapeButton(\r\n    null,\r\n    randomNumberFromRange(20, 850),\r\n    0,\r\n  );\r\n  app.stage.addChild(pentagonButton);\r\n}\r\n\r\nfunction createHexagonButton() {\r\n  let hexagonButton = getHexagonShapeButton(\r\n    null,\r\n    randomNumberFromRange(20, 850),\r\n    0,\r\n  );\r\n  app.stage.addChild(hexagonButton);\r\n}\r\n\r\nfunction createStarButton() {\r\n  let starButton = getStarShapeButton(\r\n    null,\r\n    randomNumberFromRange(20, 600),\r\n    -90,\r\n  );\r\n  app.stage.addChild(starButton);\r\n}\r\n\r\n//----------- Animate shapes ------------------------\r\n\r\nfunction generateRandomShapePerSecond() {\r\n  setInterval(() => {\r\n    clickedShapesDisplay.value += 1;\r\n    clickedShapesDisplay.updateDisplay();\r\n    let functionID = randomNumberFromRange(1, 7);\r\n\r\n    if (functionID === 1) {\r\n      createRectangleButton();\r\n    } else if (functionID === 2) {\r\n      createCircleButton();\r\n    } else if (functionID === 3) {\r\n      createEllipseButton();\r\n    } else if (functionID === 4) {\r\n      createTriangleButton();\r\n    } else if (functionID === 5) {\r\n      createPentagonButton();\r\n    } else if (functionID === 6) {\r\n      createHexagonButton();\r\n    } else if (functionID === 7) {\r\n      createStarButton();\r\n    }\r\n  }, 1 * 1000);\r\n}\r\ngenerateRandomShapePerSecond();\r\n\r\nconst shapesPerSecValue = document.querySelector('.shapes-per-sec').textContent;\r\n// app.stage.interactive = true;\r\n// const getMousePosition = () => app.renderer.plugins.interaction.mouse.global;\r\n\r\n// console.log(getMousePosition());\r\n\r\nconst canvasTotalScreenPixels = canvas.width * canvas.height;\r\n\r\n//------------------\r\n"],"sourceRoot":""}